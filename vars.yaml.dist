{% include '../vars/vars.yaml' %}
timezone: Europe/Athens
internal_interface: enp2s0
internal_ip: 172.16.1.{{ groups['kuball'].index(inventory_hostname)+81 }}/24
  #internal_gateway: 
  #internal_dns:
  #wrong_internal_ifcfg_name:
public_interface: enp1s0
public_ip: 192.168.0.{{ groups['kubpublic'].index(inventory_hostname)+81 }}/24
public_gateway: 192.168.0.1
public_dns: 
  - 192.168.0.1
kubectl_user: ktogias
pod_network_cidr: 10.100.0.0/16
kubelet:
  extra_args: --authentication-token-webhook=true --authorization-mode=Webhook
metallb:
  config:
    address-pools:
    - name: admin
      protocol: layer2
      addresses:
      - 192.168.0.80/32
      auto-assign: false
    - name: default
      protocol: layer2
      addresses:
      - 192.168.0.90-192.168.0.99
# See https://docs.projectcalico.org/reference/felix/configuration for calico config
#calico:
#  felix:
#    iptables_lock_probe_interval_millis: 50
#    iptables_lock_timeout_secs: 10
#    iptables_refresh_interval: 90
#    ipsets_refresh_interval: 10
#  liveness_probe:
#    period_seconds: 30
#    initial_delay_seconds: 30
#    failure_threshold: 12
#  readiness_probe:
#    period_seconds: 30
rook_ceph:
  cluster:
    network:
      provider: host
    dashboard:
      enabled: true
      ssl: false 
    monitoring:
      enabled: false
    healthCheck:
      livenessProbe:
        mon:
          disabled: false
        mgr:
          disabled: false
        osd:
          disabled: false  
  dashboard:
    istioHttpsIngress: 
      enabled: true
      istioGatewaySelector: admin-ingressgateway
      port: 443
      certificateIssuer: selfsigned
      dns:
      - "rook-ceph.kub.proastio.patra"
      uriPrefix: /
  blockStorage:
    pool:
    - name: rook-ceph-admin
      replicas: 2
    - name: rook-ceph-util
      replicas: 2
    storageClass:
    - name: rook-ceph-admin
      pool: rook-ceph-admin
    - name: rook-ceph-util
      pool: rook-ceph-util
    testpvc:
      spec:
        resources:
          requests:
            storage: 20Gi

istio_operator:
  ingressGateways:
  - name: istio-ingressgateway
    overlays:
      - kind: Service
        name: istio-ingressgateway
        patches:
          - path: spec.loadBalancerIP
            value: 192.168.0.90
          - path: spec.ports
            value: 
            - name: status-port
              port: 15021
              protocol: TCP
              targetPort: 15021
            - name: http2
              port: 80
              protocol: TCP
              targetPort: 8080
            - name: https
              port: 443
              protocol: TCP
              targetPort: 8443
            - name: tcp-istiod
              port: 15012
              protocol: TCP
              targetPort: 15012
            - name: tls
              port: 15443
              protocol: TCP
              targetPort: 15443
            - name: ssh
              port: 22
              protocol: TCP
              targetPort: 2222
  - name: istio-admin-ingressgateway
    enabled: true
    defaultOverlays: true
    overlays:
      - kind: Service
        name: istio-admin-ingressgateway
        patches:
          - path: spec.loadBalancerIP
            value: 192.168.0.80

kubernetes:
  metrics_server:
    kubelet_insecure_tls: true
  dashboard:
    istioHttpsIngress: 
      enabled: true
      istioGatewaySelector: admin-ingressgateway
      certificateIssuer: selfsigned
      port: 443
      dns:
      - "kub.proastio.patra"

kube_prometheus_stack:
  namespace: kube-prometheus
  alertmanager:
    storage:
      storageClassName: rook-ceph-block
      requestSize: 20Gi
    istioHttpsIngress: 
      enabled: true
      istioGatewaySelector: admin-ingressgateway
      certificateIssuer: selfsigned
      port: 443
      dns:
      - "alertmanager.kub.proastio.patra"
  prometheus:
    scrapeInterval: 60s
    evaluationInterval: 60s
#    resources:
#      limits:
#        cpu: 200m
#        memory: 200Mi
#      requests:
#        cpu: 100m
#        memory: 100Mi
    storage:
      storageClassName: rook-ceph-block
      requestSize: 20Gi
    istioHttpsIngress: 
      enabled: true
      istioGatewaySelector: admin-ingressgateway
      certificateIssuer: selfsigned
      port: 443
      dns:
      - "prometheus.kub.proastio.patra"
  grafana:
    storage:
      storageClassName: rook-ceph-block
      requestSize: 2Gi
    istioHttpsIngress: 
      enabled: true
      istioGatewaySelector: admin-ingressgateway
      certificateIssuer: selfsigned
      port: 443
      dns:
      - "grafana.kub.proastio.patra"

velero:
  cli:
    version: v1.5.3
    arch: amd64
  namespace: velero
  provider: 
    type: minio
    url: http://myhost:9000
    username: <>
    password: <>
    plugin:
      version: v1.1.0
  bucket: vkub
  deployRestic: true
  defaultVolumesToRestic: true
  restic:
    repositoryPassword: <>

gitlab:
  namespace: gitlab
  operator:
    enabled: true
  domain: <>
  rootPassword: gee9Exaekaed
  pages:
    enabled: true
    istioHttpsIngress: 
      enabled: true
      istioGatewaySelector: ingressgateway
      certificateIssuer: selfsigned
      port: 443
      dns:
      - "pages.<>"
  smtp:
    enabled: true
    address: mail.sch.gr
    user_name: "noreply"
    authentication: "login"
  smtpPassword: AhPa8Ohxaifu
  email: 
    from: "noreply@gitlab.<>"
    display_name: CTI Voucher GitLab
  timezone: Europe/Athens
  storageClass: rook-ceph-util
  webservice:
    istioHttpsIngress: 
      enabled: true
      istioGatewaySelector: ingressgateway
      certificateIssuer: selfsigned
      port: 443
      dns:
      - "gitlab.<>"
  shell:
    istioSshIngress: 
      enabled: true
      istioGatewaySelector: ingressgateway
      port: 22
      dns:
      - "gitlab.<>"
  registry:
    istioHttpsIngress: 
      enabled: true
      istioGatewaySelector: ingressgateway
      certificateIssuer: selfsigned
      port: 443
      dns:
      - "registry.<>"
  minio:
    istioHttpsIngress: 
      enabled: true
      istioGatewaySelector: ingressgateway
      certificateIssuer: selfsigned
      port: 443
      dns:
      - "minio.<>"
