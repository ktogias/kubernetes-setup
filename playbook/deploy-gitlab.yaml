---
- name: Ensure Helm is installed
  tags: 
    - prepare
  import_playbook: install-helm3.yaml

- name: Setup helm repo 
  tags: 
    - prepare
  hosts: initkubmaster
  become: true
  gather_facts: False
  tasks:
  - name: Ensure gitlab helm repo is added 
    become_user: "{{ kubectl_user }}"
    command: /usr/local/bin/helm repo add gitlab https://charts.gitlab.io/
    register: repo_add_result
  - name: Show repo add resul
    debug:
      var: repo_add_result

- name: Install chart
  tags: 
    - install_chart
  hosts: initkubmaster
  become: true
  gather_facts: False
  tasks:
  - name: Ensure gitlab helm repo is up to date
    become_user: "{{ kubectl_user }}"
    command: /usr/local/bin/helm repo update
    register: repo_update_result
  - name: Show repo update result
    debug:
      var: repo_update_result
  - name: Template values
    template:
      src: ../helm-values/gitlab/values.tmpl.yaml
      dest: "/tmp/gitlab-helm-values.yaml"
  - name: Ensure chart is installed
    become_user: "{{ kubectl_user }}"
    command: /usr/local/bin/helm upgrade -i -f /tmp/gitlab-helm-values.yaml gitlab gitlab/gitlab --namespace {{gitlab.namespace | default('gitlab')}} --create-namespace --timeout 600s
    register: helm_install_result
  - name: Show helm install result
    debug:
      var: helm_install_result
  - name: Create root password secret
    become_user: "{{ kubectl_user }}"
    shell: "kubectl -n {{gitlab.namespace | default('gitlab')}} create secret generic root-credentials --from-literal=password={{gitlab.rootPassword}} --dry-run -o yaml | kubectl apply -f - "
  - name: Create smtp password secret
    become_user: "{{ kubectl_user }}"
    shell: "kubectl -n {{gitlab.namespace | default('gitlab')}} create secret generic smtp-credentials --from-literal=password={{gitlab.smtpPassword}} --dry-run -o yaml | kubectl apply -f - "

- name: Configure webservice istio https ingress
  tags:
    - istio-ingress 
    - webservice-istio-https-ingress
  hosts: initkubmaster
  become: true
  gather_facts: False
  tasks:
  - name: Template ingress manifest
    template:
      src: ../manifests/gitlab/webservice-istio-https-ingress.tmpl.yaml
      dest: "/tmp/gitlab-webservice-istio-https-ingress.yaml"
    when: gitlab.webservice.istioHttpsIngress.enabled | default(false) | bool
  - name: Ensure ingress manifest is applied
    become: true
    become_user: "{{ kubectl_user }}"
    command: kubectl apply -f /tmp/gitlab-webservice-istio-https-ingress.yaml
    register: ingress_manifest_application_result
    when: gitlab.webservice.istioHttpsIngress.enabled | default(false) | bool
  - name: Show ingress manifest application result
    debug:
      msg: "{{ ingress_manifest_application_result }}"
    when: gitlab.webservice.istioHttpsIngress.enabled | default(false) | bool

- name: Configure shell istio ssh ingress
  tags:
    - istio-ingress 
    - shell-istio-ssh-ingress
  hosts: initkubmaster
  become: true
  gather_facts: False
  tasks:
  - name: Template ingress manifest
    template:
      src: ../manifests/gitlab/shell-istio-ssh-ingress.tmpl.yaml
      dest: "/tmp/gitlab-shell-istio-ssh-ingress.yaml"
    when: gitlab.shell.istioSshIngress.enabled | default(false) | bool
  - name: Ensure ingress manifest is applied
    become: true
    become_user: "{{ kubectl_user }}"
    command: kubectl apply -f /tmp/gitlab-shell-istio-ssh-ingress.yaml
    register: ingress_manifest_application_result
    when: gitlab.shell.istioSshIngress.enabled | default(false) | bool
  - name: Show ingress manifest application result
    debug:
      msg: "{{ ingress_manifest_application_result }}"
    when: gitlab.shell.istioSshIngress.enabled | default(false) | bool

- name: Configure registry istio https ingress
  tags:
    - istio-ingress 
    - registry-istio-https-ingress
  hosts: initkubmaster
  become: true
  gather_facts: False
  tasks:
  - name: Template ingress manifest
    template:
      src: ../manifests/gitlab/registry-istio-https-ingress.tmpl.yaml
      dest: "/tmp/gitlab-registry-istio-https-ingress.yaml"
    when: gitlab.registry.istioHttpsIngress.enabled | default(false) | bool
  - name: Ensure ingress manifest is applied
    become: true
    become_user: "{{ kubectl_user }}"
    command: kubectl apply -f /tmp/gitlab-registry-istio-https-ingress.yaml
    register: ingress_manifest_application_result
    when: gitlab.registry.istioHttpsIngress.enabled | default(false) | bool
  - name: Show ingress manifest application result
    debug:
      msg: "{{ ingress_manifest_application_result }}"
    when: gitlab.registry.istioHttpsIngress.enabled | default(false) | bool

- name: Configure minio istio https ingress
  tags:
    - istio-ingress 
    - minio-istio-https-ingress
  hosts: initkubmaster
  become: true
  gather_facts: False
  tasks:
  - name: Template ingress manifest
    template:
      src: ../manifests/gitlab/minio-istio-https-ingress.tmpl.yaml
      dest: "/tmp/gitlab-minio-istio-https-ingress.yaml"
    when: gitlab.minio.istioHttpsIngress.enabled | default(false) | bool
  - name: Ensure ingress manifest is applied
    become: true
    become_user: "{{ kubectl_user }}"
    command: kubectl apply -f /tmp/gitlab-minio-istio-https-ingress.yaml
    register: ingress_manifest_application_result
    when: gitlab.minio.istioHttpsIngress.enabled | default(false) | bool
  - name: Show ingress manifest application result
    debug:
      msg: "{{ ingress_manifest_application_result }}"
    when: gitlab.minio.istioHttpsIngress.enabled | default(false) | bool

- name: Configure pages istio https ingress
  tags:
    - istio-ingress 
    - pages-istio-https-ingress
  hosts: initkubmaster
  become: true
  gather_facts: False
  tasks:
  - name: Template ingress manifest
    template:
      src: ../manifests/gitlab/pages-istio-https-ingress.tmpl.yaml
      dest: "/tmp/gitlab-pages-istio-https-ingress.yaml"
    when: gitlab.pages.istioHttpsIngress.enabled | default(false) | bool
  - name: Ensure ingress manifest is applied
    become: true
    become_user: "{{ kubectl_user }}"
    command: kubectl apply -f /tmp/gitlab-pages-istio-https-ingress.yaml
    register: ingress_manifest_application_result
    when: gitlab.pages.istioHttpsIngress.enabled | default(false) | bool
  - name: Show ingress manifest application result
    debug:
      msg: "{{ ingress_manifest_application_result }}"
    when: gitlab.pages.istioHttpsIngress.enabled | default(false) | bool
